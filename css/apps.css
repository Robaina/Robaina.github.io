body {
  --FancyColor_selected: rgb(15, 15, 15);
  --BorderColor: var(--UnselectedBorderColor);
  --grid_item_margin: calc(0.02 * var(--ColumnWidth));
  --grid_item_border_width: calc(0.007 * var(--ColumnWidth));
  --grid_item_width: calc(0.5 * (var(--ColumnWidth) - 4 * (var(--grid_item_border_width) + var(--grid_item_margin))));
  overflow-x: hidden;
}
#webapps {
  color: var(--NavBarActiveColor);
  pointer-events: none;
}
img {
  max-width: 100%;
  max-height: auto;
}
h1, p {
  color: var(--FontColor);
}
.grid_link {
  text-decoration: none;
  color: var(--FontColor);
}
.intro {
  width: var(--ColumnWidth);
  margin-top: var(--TopMarginToHeader);
  margin-bottom: 5vh;
  margin-left: calc( (100vw - var(--ColumnWidth)) / 2);
  background-color: var(--BackgroundColor);
  color: var(--FontColor);
  font-size: var(--TextFontSize);
  text-align: justify;
}
.grid_container {
  display: grid;
  grid-template-columns: auto auto;
  width: var(--ColumnWidth);
  margin-right: 0;
  margin-left: calc((100vw - var(--ColumnWidth)) / 2.1);
  margin-bottom: 5vh;
}
.grid_item {
  width: var(--grid_item_width);
  height: auto;
  border: var(--grid_item_border_width) solid var(--BorderColor);
  border-radius: 0px;
  margin: var(--grid_item_margin);
  cursor: pointer;
}
.grid_item:hover{
  border: var(--grid_item_border_width) solid var(--FancyColor);
  /* cursor: pointer; */
}
.grid_item:hover > .button {
  border-color: var(--FancyColor);
}
.grid_item_title {
  text-align: center;
  font-size: calc(0.085 * var(--grid_item_width));
  max-height: calc(0.15 * var(--grid_item_width));
}
.thumbnail {
  width: calc(0.8 * var(--grid_item_width));
  margin-left: calc(0.1 * var(--grid_item_width));
}
.button {
  font-size: calc(0.065 * var(--grid_item_width));
  text-align: center;
  color: var(--FontColor);
  margin-top: calc(0.05 * var(--grid_item_width));
  margin-bottom: calc(0.06 * var(--grid_item_width));
  background-color: var(--BackgroundColor);
  border-color: var(--BorderColor);
  width: calc(0.3 * var(--grid_item_width));
}
.button:hover {
  background-color: var(--FancyColor);
  color: rgb(0, 0, 0);
}
.button:hover > .grid_link {
  color: var(--FancyColor_selected);
}
.deployButton {
  margin-left: calc(0.1 * var(--grid_item_width));
}
.codeButton {
  margin-left: calc(0.2 * var(--grid_item_width));
}

@media only screen and (max-width: 768px) and (orientation: portrait) {
  body {
    --sclfactor: 2.4;
    --grid_item_margin: calc(var(--sclfactor) * 0.02 * var(--ColumnWidth));
    --grid_item_border_width: calc(var(--sclfactor) * 0.008 * var(--ColumnWidth));
    --grid_item_width: calc(var(--sclfactor) * 0.5 * (var(--ColumnWidth) - 4 * (var(--grid_item_border_width) + var(--grid_item_margin))));
  }
  .grid_container {
    grid-template-columns: auto;
  }
}
